/// <reference types="react" />
export declare const styled: <Type extends import("@stitches/react/types/util").Function | keyof JSX.IntrinsicElements | import("react").ComponentType<any>, Composers extends (string | import("@stitches/react/types/util").Function | import("react").ComponentType<any> | {
    [name: string]: unknown;
})[], CSS = import("@stitches/react/types/css-util").CSS<{}, {
    colors: {
        white: string;
        general100: string;
        general90: string;
        general80: string;
        general70: string;
        general60: string;
        general50: string;
        general40: string;
        general30: string;
        primary100: string;
        primary90: string;
        primary80: string;
        primary70: string;
        primary60: string;
        primary50: string;
        primary40: string;
        primary30: string;
        secondary100: string;
        secondary90: string;
        secondary80: string;
        secondary70: string;
        secondary60: string;
        secondary50: string;
        secondary40: string;
        secondary30: string;
        danger100: string;
        danger90: string;
        danger80: string;
        danger70: string;
        danger60: string;
        danger50: string;
        danger40: string;
        danger30: string;
        success100: string;
        success90: string;
        success80: string;
        success70: string;
        success60: string;
        success50: string;
        success40: string;
        success30: string;
        warning100: string;
        warning90: string;
        warning80: string;
        warning70: string;
        warning60: string;
        warning50: string;
        warning40: string;
        warning30: string;
    };
    shadows: {
        modal: string;
    };
    media: {
        xl: string;
        lg: string;
        md: string;
        sm: string;
        xs: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {}>>(type: Type, ...composers: { [K in keyof Composers]: Composers[K] extends string | import("@stitches/react/types/util").Function | import("react").ComponentType<any> ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS;
            [x: number]: CSS;
        };
    };
    compoundVariants?: (("variants" extends keyof Composers[K] ? { [Name in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]>; } : import("@stitches/react/types/util").WideObject) & {
        css: CSS;
    })[];
    defaultVariants?: "variants" extends keyof Composers[K] ? { [Name_1 in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]>; } : import("@stitches/react/types/util").WideObject;
} & CSS & { [K2 in keyof Composers[K]]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS ? CSS[K2] : unknown; }; }) => import("@stitches/react/types/styled-component").StyledComponent<Type, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {}, import("@stitches/react/types/css-util").CSS<{}, {
    colors: {
        white: string;
        general100: string;
        general90: string;
        general80: string;
        general70: string;
        general60: string;
        general50: string;
        general40: string;
        general30: string;
        primary100: string;
        primary90: string;
        primary80: string;
        primary70: string;
        primary60: string;
        primary50: string;
        primary40: string;
        primary30: string;
        secondary100: string;
        secondary90: string;
        secondary80: string;
        secondary70: string;
        secondary60: string;
        secondary50: string;
        secondary40: string;
        secondary30: string;
        danger100: string;
        danger90: string;
        danger80: string;
        danger70: string;
        danger60: string;
        danger50: string;
        danger40: string;
        danger30: string;
        success100: string;
        success90: string;
        success80: string;
        success70: string;
        success60: string;
        success50: string;
        success40: string;
        success30: string;
        warning100: string;
        warning90: string;
        warning80: string;
        warning70: string;
        warning60: string;
        warning50: string;
        warning40: string;
        warning30: string;
    };
    shadows: {
        modal: string;
    };
    media: {
        xl: string;
        lg: string;
        md: string;
        sm: string;
        xs: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {}>>, css: <Composers extends (string | import("@stitches/react/types/util").Function | import("react").ExoticComponent<any> | import("react").JSXElementConstructor<any> | {
    [name: string]: unknown;
})[], CSS = import("@stitches/react/types/css-util").CSS<{}, {
    colors: {
        white: string;
        general100: string;
        general90: string;
        general80: string;
        general70: string;
        general60: string;
        general50: string;
        general40: string;
        general30: string;
        primary100: string;
        primary90: string;
        primary80: string;
        primary70: string;
        primary60: string;
        primary50: string;
        primary40: string;
        primary30: string;
        secondary100: string;
        secondary90: string;
        secondary80: string;
        secondary70: string;
        secondary60: string;
        secondary50: string;
        secondary40: string;
        secondary30: string;
        danger100: string;
        danger90: string;
        danger80: string;
        danger70: string;
        danger60: string;
        danger50: string;
        danger40: string;
        danger30: string;
        success100: string;
        success90: string;
        success80: string;
        success70: string;
        success60: string;
        success50: string;
        success40: string;
        success30: string;
        warning100: string;
        warning90: string;
        warning80: string;
        warning70: string;
        warning60: string;
        warning50: string;
        warning40: string;
        warning30: string;
    };
    shadows: {
        modal: string;
    };
    media: {
        xl: string;
        lg: string;
        md: string;
        sm: string;
        xs: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {}>>(...composers: { [K in keyof Composers]: Composers[K] extends string | import("@stitches/react/types/util").Function | import("react").ExoticComponent<any> | import("react").JSXElementConstructor<any> ? Composers[K] : import("@stitches/react/types/stitches").RemoveIndex<CSS> & {
    variants?: {
        [x: string]: {
            [x: string]: CSS;
            [x: number]: CSS;
        };
    };
    compoundVariants?: (("variants" extends keyof Composers[K] ? { [Name in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name]>; } : import("@stitches/react/types/util").WideObject) & {
        css: CSS;
    })[];
    defaultVariants?: "variants" extends keyof Composers[K] ? { [Name_1 in keyof Composers[K][keyof Composers[K] & "variants"]]?: import("@stitches/react/types/util").String | import("@stitches/react/types/util").Widen<keyof Composers[K][keyof Composers[K] & "variants"][Name_1]>; } : import("@stitches/react/types/util").WideObject;
} & CSS & { [K2 in keyof Composers[K]]: K2 extends "compoundVariants" | "defaultVariants" | "variants" ? unknown : K2 extends keyof CSS ? CSS[K2] : unknown; }; }) => import("@stitches/react/types/styled-component").CssComponent<import("@stitches/react/types/styled-component").StyledComponentType<Composers>, import("@stitches/react/types/styled-component").StyledComponentProps<Composers>, {}, CSS>, globalCss: <Styles extends {
    [K: string]: any;
}>(...styles: ({
    '@import'?: unknown;
    '@font-face'?: unknown;
} & { [K in keyof Styles]: K extends "@import" ? string | string[] : K extends "@font-face" ? import("@stitches/react/types/css").AtRule.FontFace | import("@stitches/react/types/css").AtRule.FontFace[] : K extends `@keyframes ${string}` ? {
    [x: string]: import("@stitches/react/types/css-util").CSS<{}, {
        colors: {
            white: string;
            general100: string;
            general90: string;
            general80: string;
            general70: string;
            general60: string;
            general50: string;
            general40: string;
            general30: string;
            primary100: string;
            primary90: string;
            primary80: string;
            primary70: string;
            primary60: string;
            primary50: string;
            primary40: string;
            primary30: string;
            secondary100: string;
            secondary90: string;
            secondary80: string;
            secondary70: string;
            secondary60: string;
            secondary50: string;
            secondary40: string;
            secondary30: string;
            danger100: string;
            danger90: string;
            danger80: string;
            danger70: string;
            danger60: string;
            danger50: string;
            danger40: string;
            danger30: string;
            success100: string;
            success90: string;
            success80: string;
            success70: string;
            success60: string;
            success50: string;
            success40: string;
            success30: string;
            warning100: string;
            warning90: string;
            warning80: string;
            warning70: string;
            warning60: string;
            warning50: string;
            warning40: string;
            warning30: string;
        };
        shadows: {
            modal: string;
        };
        media: {
            xl: string;
            lg: string;
            md: string;
            sm: string;
            xs: string;
        };
    }, import("@stitches/react/types/config").DefaultThemeMap, {}>;
} : K extends `@property ${string}` ? import("@stitches/react/types/css").AtRule.Property : import("@stitches/react/types/css-util").CSS<{}, {
    colors: {
        white: string;
        general100: string;
        general90: string;
        general80: string;
        general70: string;
        general60: string;
        general50: string;
        general40: string;
        general30: string;
        primary100: string;
        primary90: string;
        primary80: string;
        primary70: string;
        primary60: string;
        primary50: string;
        primary40: string;
        primary30: string;
        secondary100: string;
        secondary90: string;
        secondary80: string;
        secondary70: string;
        secondary60: string;
        secondary50: string;
        secondary40: string;
        secondary30: string;
        danger100: string;
        danger90: string;
        danger80: string;
        danger70: string;
        danger60: string;
        danger50: string;
        danger40: string;
        danger30: string;
        success100: string;
        success90: string;
        success80: string;
        success70: string;
        success60: string;
        success50: string;
        success40: string;
        success30: string;
        warning100: string;
        warning90: string;
        warning80: string;
        warning70: string;
        warning60: string;
        warning50: string;
        warning40: string;
        warning30: string;
    };
    shadows: {
        modal: string;
    };
    media: {
        xl: string;
        lg: string;
        md: string;
        sm: string;
        xs: string;
    };
}, import("@stitches/react/types/config").DefaultThemeMap, {}>; })[]) => () => string, keyframes: (style: {
    [offset: string]: import("@stitches/react/types/css-util").CSS<{}, {
        colors: {
            white: string;
            general100: string;
            general90: string;
            general80: string;
            general70: string;
            general60: string;
            general50: string;
            general40: string;
            general30: string;
            primary100: string;
            primary90: string;
            primary80: string;
            primary70: string;
            primary60: string;
            primary50: string;
            primary40: string;
            primary30: string;
            secondary100: string;
            secondary90: string;
            secondary80: string;
            secondary70: string;
            secondary60: string;
            secondary50: string;
            secondary40: string;
            secondary30: string;
            danger100: string;
            danger90: string;
            danger80: string;
            danger70: string;
            danger60: string;
            danger50: string;
            danger40: string;
            danger30: string;
            success100: string;
            success90: string;
            success80: string;
            success70: string;
            success60: string;
            success50: string;
            success40: string;
            success30: string;
            warning100: string;
            warning90: string;
            warning80: string;
            warning70: string;
            warning60: string;
            warning50: string;
            warning40: string;
            warning30: string;
        };
        shadows: {
            modal: string;
        };
        media: {
            xl: string;
            lg: string;
            md: string;
            sm: string;
            xs: string;
        };
    }, import("@stitches/react/types/config").DefaultThemeMap, {}>;
}) => {
    (): string;
    name: string;
}, getCssText: () => string, theme: string & {
    className: string;
    selector: string;
} & {
    colors: {
        white: import("@stitches/react/types/theme").Token<"white", string, "colors", "">;
        general100: import("@stitches/react/types/theme").Token<"general100", string, "colors", "">;
        general90: import("@stitches/react/types/theme").Token<"general90", string, "colors", "">;
        general80: import("@stitches/react/types/theme").Token<"general80", string, "colors", "">;
        general70: import("@stitches/react/types/theme").Token<"general70", string, "colors", "">;
        general60: import("@stitches/react/types/theme").Token<"general60", string, "colors", "">;
        general50: import("@stitches/react/types/theme").Token<"general50", string, "colors", "">;
        general40: import("@stitches/react/types/theme").Token<"general40", string, "colors", "">;
        general30: import("@stitches/react/types/theme").Token<"general30", string, "colors", "">;
        primary100: import("@stitches/react/types/theme").Token<"primary100", string, "colors", "">;
        primary90: import("@stitches/react/types/theme").Token<"primary90", string, "colors", "">;
        primary80: import("@stitches/react/types/theme").Token<"primary80", string, "colors", "">;
        primary70: import("@stitches/react/types/theme").Token<"primary70", string, "colors", "">;
        primary60: import("@stitches/react/types/theme").Token<"primary60", string, "colors", "">;
        primary50: import("@stitches/react/types/theme").Token<"primary50", string, "colors", "">;
        primary40: import("@stitches/react/types/theme").Token<"primary40", string, "colors", "">;
        primary30: import("@stitches/react/types/theme").Token<"primary30", string, "colors", "">;
        secondary100: import("@stitches/react/types/theme").Token<"secondary100", string, "colors", "">;
        secondary90: import("@stitches/react/types/theme").Token<"secondary90", string, "colors", "">;
        secondary80: import("@stitches/react/types/theme").Token<"secondary80", string, "colors", "">;
        secondary70: import("@stitches/react/types/theme").Token<"secondary70", string, "colors", "">;
        secondary60: import("@stitches/react/types/theme").Token<"secondary60", string, "colors", "">;
        secondary50: import("@stitches/react/types/theme").Token<"secondary50", string, "colors", "">;
        secondary40: import("@stitches/react/types/theme").Token<"secondary40", string, "colors", "">;
        secondary30: import("@stitches/react/types/theme").Token<"secondary30", string, "colors", "">;
        danger100: import("@stitches/react/types/theme").Token<"danger100", string, "colors", "">;
        danger90: import("@stitches/react/types/theme").Token<"danger90", string, "colors", "">;
        danger80: import("@stitches/react/types/theme").Token<"danger80", string, "colors", "">;
        danger70: import("@stitches/react/types/theme").Token<"danger70", string, "colors", "">;
        danger60: import("@stitches/react/types/theme").Token<"danger60", string, "colors", "">;
        danger50: import("@stitches/react/types/theme").Token<"danger50", string, "colors", "">;
        danger40: import("@stitches/react/types/theme").Token<"danger40", string, "colors", "">;
        danger30: import("@stitches/react/types/theme").Token<"danger30", string, "colors", "">;
        success100: import("@stitches/react/types/theme").Token<"success100", string, "colors", "">;
        success90: import("@stitches/react/types/theme").Token<"success90", string, "colors", "">;
        success80: import("@stitches/react/types/theme").Token<"success80", string, "colors", "">;
        success70: import("@stitches/react/types/theme").Token<"success70", string, "colors", "">;
        success60: import("@stitches/react/types/theme").Token<"success60", string, "colors", "">;
        success50: import("@stitches/react/types/theme").Token<"success50", string, "colors", "">;
        success40: import("@stitches/react/types/theme").Token<"success40", string, "colors", "">;
        success30: import("@stitches/react/types/theme").Token<"success30", string, "colors", "">;
        warning100: import("@stitches/react/types/theme").Token<"warning100", string, "colors", "">;
        warning90: import("@stitches/react/types/theme").Token<"warning90", string, "colors", "">;
        warning80: import("@stitches/react/types/theme").Token<"warning80", string, "colors", "">;
        warning70: import("@stitches/react/types/theme").Token<"warning70", string, "colors", "">;
        warning60: import("@stitches/react/types/theme").Token<"warning60", string, "colors", "">;
        warning50: import("@stitches/react/types/theme").Token<"warning50", string, "colors", "">;
        warning40: import("@stitches/react/types/theme").Token<"warning40", string, "colors", "">;
        warning30: import("@stitches/react/types/theme").Token<"warning30", string, "colors", "">;
    };
    shadows: {
        modal: import("@stitches/react/types/theme").Token<"modal", string, "shadows", "">;
    };
    media: {
        xl: import("@stitches/react/types/theme").Token<"xl", string, "media", "">;
        lg: import("@stitches/react/types/theme").Token<"lg", string, "media", "">;
        md: import("@stitches/react/types/theme").Token<"md", string, "media", "">;
        sm: import("@stitches/react/types/theme").Token<"sm", string, "media", "">;
        xs: import("@stitches/react/types/theme").Token<"xs", string, "media", "">;
    };
}, createTheme: <Argument0 extends string | ({
    colors?: {
        white?: string | number | boolean;
        general100?: string | number | boolean;
        general90?: string | number | boolean;
        general80?: string | number | boolean;
        general70?: string | number | boolean;
        general60?: string | number | boolean;
        general50?: string | number | boolean;
        general40?: string | number | boolean;
        general30?: string | number | boolean;
        primary100?: string | number | boolean;
        primary90?: string | number | boolean;
        primary80?: string | number | boolean;
        primary70?: string | number | boolean;
        primary60?: string | number | boolean;
        primary50?: string | number | boolean;
        primary40?: string | number | boolean;
        primary30?: string | number | boolean;
        secondary100?: string | number | boolean;
        secondary90?: string | number | boolean;
        secondary80?: string | number | boolean;
        secondary70?: string | number | boolean;
        secondary60?: string | number | boolean;
        secondary50?: string | number | boolean;
        secondary40?: string | number | boolean;
        secondary30?: string | number | boolean;
        danger100?: string | number | boolean;
        danger90?: string | number | boolean;
        danger80?: string | number | boolean;
        danger70?: string | number | boolean;
        danger60?: string | number | boolean;
        danger50?: string | number | boolean;
        danger40?: string | number | boolean;
        danger30?: string | number | boolean;
        success100?: string | number | boolean;
        success90?: string | number | boolean;
        success80?: string | number | boolean;
        success70?: string | number | boolean;
        success60?: string | number | boolean;
        success50?: string | number | boolean;
        success40?: string | number | boolean;
        success30?: string | number | boolean;
        warning100?: string | number | boolean;
        warning90?: string | number | boolean;
        warning80?: string | number | boolean;
        warning70?: string | number | boolean;
        warning60?: string | number | boolean;
        warning50?: string | number | boolean;
        warning40?: string | number | boolean;
        warning30?: string | number | boolean;
    };
    shadows?: {
        modal?: string | number | boolean;
    };
    media?: {
        xl?: string | number | boolean;
        lg?: string | number | boolean;
        md?: string | number | boolean;
        sm?: string | number | boolean;
        xs?: string | number | boolean;
    };
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
}), Argument1 extends string | ({
    colors?: {
        white?: string | number | boolean;
        general100?: string | number | boolean;
        general90?: string | number | boolean;
        general80?: string | number | boolean;
        general70?: string | number | boolean;
        general60?: string | number | boolean;
        general50?: string | number | boolean;
        general40?: string | number | boolean;
        general30?: string | number | boolean;
        primary100?: string | number | boolean;
        primary90?: string | number | boolean;
        primary80?: string | number | boolean;
        primary70?: string | number | boolean;
        primary60?: string | number | boolean;
        primary50?: string | number | boolean;
        primary40?: string | number | boolean;
        primary30?: string | number | boolean;
        secondary100?: string | number | boolean;
        secondary90?: string | number | boolean;
        secondary80?: string | number | boolean;
        secondary70?: string | number | boolean;
        secondary60?: string | number | boolean;
        secondary50?: string | number | boolean;
        secondary40?: string | number | boolean;
        secondary30?: string | number | boolean;
        danger100?: string | number | boolean;
        danger90?: string | number | boolean;
        danger80?: string | number | boolean;
        danger70?: string | number | boolean;
        danger60?: string | number | boolean;
        danger50?: string | number | boolean;
        danger40?: string | number | boolean;
        danger30?: string | number | boolean;
        success100?: string | number | boolean;
        success90?: string | number | boolean;
        success80?: string | number | boolean;
        success70?: string | number | boolean;
        success60?: string | number | boolean;
        success50?: string | number | boolean;
        success40?: string | number | boolean;
        success30?: string | number | boolean;
        warning100?: string | number | boolean;
        warning90?: string | number | boolean;
        warning80?: string | number | boolean;
        warning70?: string | number | boolean;
        warning60?: string | number | boolean;
        warning50?: string | number | boolean;
        warning40?: string | number | boolean;
        warning30?: string | number | boolean;
    };
    shadows?: {
        modal?: string | number | boolean;
    };
    media?: {
        xl?: string | number | boolean;
        lg?: string | number | boolean;
        md?: string | number | boolean;
        sm?: string | number | boolean;
        xs?: string | number | boolean;
    };
} & {
    [x: string]: {
        [x: string]: string | number | boolean;
        [x: number]: string | number | boolean;
    };
})>(nameOrScalesArg0: Argument0, nameOrScalesArg1?: Argument1) => string & {
    className: string;
    selector: string;
} & (Argument0 extends string ? import("@stitches/react/types/stitches").ThemeTokens<Argument1, ""> : import("@stitches/react/types/stitches").ThemeTokens<Argument0, "">), config: {
    prefix: "";
    media: {};
    theme: {
        colors: {
            white: string;
            general100: string;
            general90: string;
            general80: string;
            general70: string;
            general60: string;
            general50: string;
            general40: string;
            general30: string;
            primary100: string;
            primary90: string;
            primary80: string;
            primary70: string;
            primary60: string;
            primary50: string;
            primary40: string;
            primary30: string;
            secondary100: string;
            secondary90: string;
            secondary80: string;
            secondary70: string;
            secondary60: string;
            secondary50: string;
            secondary40: string;
            secondary30: string;
            danger100: string;
            danger90: string;
            danger80: string;
            danger70: string;
            danger60: string;
            danger50: string;
            danger40: string;
            danger30: string;
            success100: string;
            success90: string;
            success80: string;
            success70: string;
            success60: string;
            success50: string;
            success40: string;
            success30: string;
            warning100: string;
            warning90: string;
            warning80: string;
            warning70: string;
            warning60: string;
            warning50: string;
            warning40: string;
            warning30: string;
        };
        shadows: {
            modal: string;
        };
        media: {
            xl: string;
            lg: string;
            md: string;
            sm: string;
            xs: string;
        };
    };
    themeMap: import("@stitches/react/types/config").DefaultThemeMap;
    utils: {};
};
